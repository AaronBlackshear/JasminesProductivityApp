{"version":3,"file":"static/webpack/static/development/pages/index.js.3201ab0e75c404999ac8.hot-update.js","sources":["webpack:///./components/CalendarComponents/EventForm.js"],"sourcesContent":["import React, { Component } from 'react'\nimport {\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  TimePicker,\n  Button,\n} from 'antd';\nimport { addEvent } from '../../redux/reducers/calendarReducer';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst { Item } = Form; \nconst { Option } = Select; \n\nclass EventForm extends Component {\n  state = {\n    category: null,\n    event: '',\n    date: '',\n    startTime: moment(Date.now()).format('HH:mm:ss'),\n    endTime: moment(Date.now()).format('HH:mm:ss'),\n  }\n\n  addEvent = (event, category, date, startTime, endTime) => {\n    const { dispatch, toggleEventForm } = this.props\n    dispatch(addEvent(event, category, date, startTime, endTime))\n    toggleEventForm(false)\n  };\n\n  handleInput = (state, value) => {\n    this.setState({ [state]: value });\n  }\n\n  render() {\n    const { toggleEventForm } = this.props;\n    const { event, category, date, startTime, endTime } = this.state;\n\n    return (\n      <Form style={{ marginTop: '15px' }}>\n        <Item>\n          <Input\n            placeholder=\"What's the Event?\"\n            onChange={e => this.handleInput('event', e.target.value)}\n          />\n        </Item>\n        <Item>\n          <Select\n            placeholder=\"Select Category\"\n            onSelect={e => this.handleInput('category', e)}\n          >\n            <Option value=\"category1\">Category 1</Option>\n            <Option value=\"category2\">Category 2</Option>\n            <Option value=\"category3\">Category 3</Option>\n          </Select>\n        </Item>\n        <Item>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <DatePicker onChange={e => console.log(e)} />\n            <span>\n              <TimePicker /> - <TimePicker />\n            </span>\n          </div>\n        </Item>\n        <Item>\n          <Button\n            type=\"secondary\"\n            onClick={() => toggleEventForm(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => this.addEvent(event, category, date, startTime, endTime)}\n          >\n            Add Event\n          </Button>\n        </Item>\n      </Form>\n    )\n  }\n}\nconst mapStateToProps = state => ({ state });\n\nexport default connect(mapStateToProps)(EventForm)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAjEA;AACA;AAkEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}